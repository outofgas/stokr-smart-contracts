pragma solidity ^0.4.20;

import "../zeppelin-solidity/contracts/crowdsale/distribution/FinalizableCrowdsale.sol";

/// @title SicosCrowdsale
/// @author Autogenerated from a Dia UML diagram
contract SicosCrowdsale is FinalizableCrowdsale {

    /// @dev Crowdsale
    /// @param _token An Ethereum address
    /// @param _startTime A positive number
    /// @param _endTime A positive number
    /// @param _rate A positive number
    /// @param _wallet An Ethereum address
    function Crowdsale(address _token, uint _startTime, uint _endTime, uint _rate, address _wallet) public {
        require(IMPLEMENTATION);
    }

    /// @dev Set rate
    /// @param _newRate A positive number
    function setRate(uint _newRate) public onlyOwner {
        require(IMPLEMENTATION);
    }

    /// @dev Valid purchase
    /// @return True or false
    function validPurchase() returns (bool) {
        require(IMPLEMENTATION);
    }

    /// @dev Finalization
    function finalization() {
        require(IMPLEMENTATION);
    }

}
