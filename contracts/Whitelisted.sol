pragma solidity ^0.4.20;

import "../zeppelin-solidity/contracts/ownership/Ownable.sol";
import "./Whitelist.sol";


/// @title Whitelisted
/// @author Autogenerated from a Dia UML diagram
contract Whitelisted is Ownable {

    Whitelist public whitelist;

    /// @dev Log entry on whitelist changed
    /// @param whitelist An Ethereum address
    event WhitelistChanged(address whitelist);

    /// @dev Ensure only whitelisted
    modifier onlyWhitelisted(address _address) {
        require(whitelist.isWhitelisted(_address));
        _;
    }

    /// @dev Constructor
    /// @param _whitelist An Ethereum address
    function Whitelisted(address _whitelist) public {
        setWhitelist(_whitelist);
    }

    /// @dev Set whitelist
    /// @param _whitelist An Ethereum address
    function setWhitelist(address _whitelist) public onlyOwner {
        require(_whitelist != address(0));
        whitelist = Whitelist(_whitelist);
        WhitelistChanged(_whitelist);
    }

}
