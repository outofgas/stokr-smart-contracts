pragma solidity 0.4.24;

import "./ProfitSharing.sol";
import "./Whitelisted.sol";
import "ERC20.sol";


/// @title MintableToken
/// @author Autogenerated from a Dia UML diagram
contract MintableToken is ProfitSharing, Whitelisted, ERC20 {

    address public minter;

    /// @dev Log entry on minted
    /// @param to An Ethereum address
    /// @param amount A positive number
    event Minted(address to, uint amount);

    /// @dev Log entry on mint finished
    event MintFinished();

    /// @dev Ensure only minter
    modifier onlyMinter() {
        require(IMPLEMENTATION);
        _;
    }

    /// @dev Ensure can mint
    modifier canMint() {
        require(IMPLEMENTATION);
        _;
    }

    /// @dev Ensure not minting
    modifier notMinting() {
        require(IMPLEMENTATION);
        _;
    }

    /// @dev Set minter
    /// @param _minter An Ethereum address
    function setMinter(address _minter) public onlyOwner {
        require(IMPLEMENTATION);
    }

    /// @dev Mint
    /// @param _to An Ethereum address
    /// @param _amount A positive number
    function mint(address _to, uint _amount) public onlyMinter canMint onlyWhitelisted(_to) {
        require(IMPLEMENTATION);
    }

    /// @dev Finish minting
    function finishMinting() public onlyMinter canMint {
        require(IMPLEMENTATION);
    }

    /// @dev Minting finshed
    /// @return True or false
    function mintingFinshed() public view returns (bool) {
        require(IMPLEMENTATION);
    }

}

